!function(global,factory){"object"==typeof exports&&"undefined"!=typeof module?module.exports=factory():"function"==typeof define&&define.AMD?define(factory):(global=global||self).MosaicFadeInSingle=factory()}(this,(function(){"use strict";class MosaicFadeInSingle{constructor(options){const container=document.querySelector(options.selector);if(!container)throw new Error("can not find selector.");const url=options.img,selector=`canvas${(new Date).getTime().toString()}`;container.style.position="relative",container.style.display="inline-block";const mosaic=size=>{const canvas=document.querySelector(`.${selector}`),_canvas=document.createElement("canvas");if(!canvas||!canvas.getContext)throw new Error;const createMosaic=(context,width,height,size,data)=>{for(let y=0;y<height;y+=size)for(let x=0;x<width;x+=size){const cR=data.data[4*(y*width+x)],cG=data.data[4*(y*width+x)+1],cB=data.data[4*(y*width+x)+2];context.fillStyle=`rgb(${cR},${cG},${cB})`,context.fillRect(x,y,x+size,y+size)}},draw=(_context,imageData,context)=>{createMosaic(_context,_canvas.width,_canvas.height,size,imageData),context.drawImage(_canvas,0,0)},exec=()=>{const context=canvas.getContext("2d"),img=new Image;img.src=canvas.dataset.url,img.onload=()=>{const _context=_canvas.getContext("2d");_canvas.width=img.width,_canvas.height=img.height,_context.drawImage(img,0,0);const imageData=_context.getImageData(0,0,_canvas.width,_canvas.height);draw(_context,imageData,context)}};exec()},setupCanvas=()=>{const tag=document.createElement("canvas");tag.classList.add(selector),tag.style.position="absolute",tag.top=0,tag.left=0,tag.dataset.url=url,container.insertAdjacentElement("beforeend",tag);const ctx=tag.getContext("2d"),img=new Image;img.src=url,img.onload=()=>{container.style.width=`${img.naturalWidth}px`,container.style.height=`${img.naturalHeight}px`,tag.width=img.naturalWidth,tag.height=img.naturalHeight,ctx.drawImage(img,0,0,img.naturalWidth,img.naturalHeight)}};async function start(){const sleep=ms=>new Promise(resolve=>setTimeout(resolve,ms)),t=100;mosaic(18),await sleep(t),mosaic(13),await sleep(t),mosaic(10),await sleep(t),mosaic(8),await sleep(t),mosaic(5),await sleep(t),setupCanvas(selector,url)}setupCanvas(),setTimeout(()=>mosaic(20),100);const mouseenter=()=>{start(),container.removeEventListener("mouseenter",mouseenter)};container.addEventListener("mouseenter",mouseenter)}}return MosaicFadeInSingle}));